   1 0000               # File: $Id$
   2 0000               # Author: Ryan Cervantes (rxc3202@rit.edu)
   3 0000               # Description: this file is the main file for the
   4 0000               #               cs250 project
   5 0000               
   6 0000               
   7 0000               
   8 0000               ###########################################
   9 0000               # ======================================= #
  10 0000               # ||        CONSTANTS BLOCK            || #
  11 0000               # ======================================= #
  12 0000               ###########################################
  13 0000               
  14 0000               # ===========================
  15 0000               # || param block constants ||
  16 0000               # ===========================
  17 0000               
  18 0000               DIM_OFFSET = 0
  19 0000               GEN_OFFSET = 4
  20 0000               A_OFFSET = 8
  21 0000               B_OFFSET = 12
  22 0000               NEXT_A_OFFSET = 16
  23 0000               NEXT_B_OFFSET = 20
  24 0000               A_ARRAY_OFFSET = 24
  25 0000               B_ARRAY_OFFSET = 28
  26 0000               
  27 0000               # syscall codes
  28 0000               
  29 0000               PRINT_INT =	1
  30 0000               PRINT_STRING = 	4
  31 0000               READ_INT = 	5
  32 0000               READ_STRING =	8
  33 0000               
  34 0000               # various frame sizes used by different routines
  35 0000               
  36 0000               FRAMESIZE_8 = 	8
  37 0000               FRAMESIZE_24 =	24
  38 0000               FRAMESIZE_40 =	40
  39 0000               FRAMESIZE_48 =	48
  40 0000               
  41 0000                       .data
  42 0000                       .align      2
  43 0000               
  44 0000               # ====================
  45 0000               #    INPUT STRINGS 
  46 0000               # ====================
  47 0000               
  48 0000               enter_board_size:
  49 0000 0A456E74	        .asciiz "\nEnter board size: "
          65722062
          6F617264
          2073697A
          653A2000
  50 0014               
  51 0014               enter_generations: 
  52 0014 0A456E74	        .asciiz "\nEnter number of generations to run: "
          6572206E
          756D6265
          72206F66
          2067656E
          65726174
  53 003a               
  54 003a               live_cells_A:
  55 003a 0A456E74	        .asciiz "\nEnter number of live cells for colony A: "
          6572206E
          756D6265
          72206F66
          206C6976
          65206365
  56 0065               
  57 0065               live_cells_B:
  58 0065 0A456E74	        .asciiz "\nEnter number of live cells for colony B: "
          6572206E
          756D6265
          72206F66
          206C6976
          65206365
  59 0090               
  60 0090               enter_locations:
  61 0090 0A537461	        .asciiz "\nStart entering locations: \n"
          72742065
          6E746572
          696E6720
          6C6F6361
          74696F6E
  62 00ad               
  63 00ad               # ====================
  64 00ad               #    OTHER STRINGS 
  65 00ad               # ====================
  66 00ad               
  67 00ad               banner:
  68 00ad 0A2A2A2A	        .ascii "\n**********************\n"
          2A2A2A2A
          2A2A2A2A
          2A2A2A2A
          2A2A2A2A
          2A2A2A0A
  69 00c5 2A2A2A2A	        .ascii "****    Colony    ****\n"
          20202020
          436F6C6F
          6E792020
          20202A2A
          2A2A0A  
  70 00dc 2A2A2A2A	        .asciiz "**********************\n"
          2A2A2A2A
          2A2A2A2A
          2A2A2A2A
          2A2A2A2A
          2A2A0A00
  71 00f4               
  72 00f4               gen_banner_start:
  73 00f4 3D3D3D3D	        .asciiz "====    GENERATION "
          20202020
          47454E45
          52415449
          4F4E2000
  74 0108               
  75 0108               gen_banner_end:
  76 0108 20202020	        .asciiz "    ====\n"
          3D3D3D3D
          0A00    
  77 0112               
  78 0112               newline: 
  79 0112 0A00    	        .asciiz "\n"
  80 0114               
  81 0114               space:
  82 0114 2000    	        .asciiz " "
  83 0116               
  84 0116               # ====================
  85 0116               #    ERROR STRINGS 
  86 0116               # ====================
  87 0116               
  88 0116               illegal_size:
  89 0116 0A574152	        .asciiz "\nWARNING: illegal board size, try again: "
          4E494E47
          3A20696C
          6C656761
          6C20626F
          61726420
  90 0140               
  91 0140               illegal_gens:
  92 0140 0A574152	        .asciiz "\nWARNING: illegal number of generations, try again: "
          4E494E47
          3A20696C
          6C656761
          6C206E75
          6D626572
  93 0175               
  94 0175               illegal_cells:
  95 0175 0A574152	        .asciiz "\nWARNING: illegal number of live cells, try again: "
          4E494E47
          3A20696C
          6C656761
          6C206E75
          6D626572
  96 01a9               
  97 01a9               illegal_point:
  98 01a9 0A574152	        .asciiz "\nWARNING: illegal point location\n"
          4E494E47
          3A20696C
          6C656761
          6C20706F
          696E7420
  99 01cb               
 100 01cb               # ====================
 101 01cb               #    DEBUG STRINGS  
 102 01cb               # ====================
 103 01cb               
 104 01cb               d_dim:
 105 01cb 0A20426F	        .asciiz "\n Board Dimensions: "
          61726420
          44696D65
          6E73696F
          6E733A20
          00      
 106 01e0               
 107 01e0               d_gen:
 108 01e0 0A204765	        .asciiz "\n Generations: "
          6E657261
          74696F6E
          733A2000
 109 01f0               
 110 01f0               d_a_cells:
 111 01f0 0A20436F	        .asciiz "\n Colony A Cells: "
          6C6F6E79
          20412043
          656C6C73
          3A2000  
 112 0203               
 113 0203               d_b_cells:
 114 0203 0A20436F	        .asciiz "\n Colony B Cells: "
          6C6F6E79
          20422043
          656C6C73
          3A2000  
 115 0216               
 116 0216               d_a_loc:
 117 0216 0A204120	        .asciiz "\n A Coordinates: "
          436F6F72
          64696E61
          7465733A
          2000    
 118 0228               
 119 0228               d_b_loc:
 120 0228 0A204220	        .asciiz "\n B Coordinates: "
          436F6F72
          64696E61
          7465733A
          2000    
 121 023a               
 122 023a               lp:
 123 023a 2800    	        .asciiz "("
 124 023c               comma:
 125 023c 2C2000  	        .asciiz ", "
 126 023f               rp:
 127 023f 2900    	        .asciiz ")"
 128 0241               
 129 0241               # ====================
 130 0241               #    BOARD STRINGS  
 131 0241               # ====================
 132 0241               
 133 0241               plus:
 134 0241 2B00    	        .asciiz "+"
 135 0243               
 136 0243               hyphen:
 137 0243 2D00    	        .asciiz "-"
 138 0245               
 139 0245               bar:
 140 0245 7C00    	        .asciiz "|"
 141 0247               
 142 0247               A:
 143 0247 4100    	        .asciiz "A"
 144 0249               B:
 145 0249 4200    	        .asciiz "B"
 146 024b               
 147 024b               # ====================
 148 024b               #     GAME BUFFERS
 149 024b               # ====================
 150 024b               # These addresses will hold the values read in by the user
 151 024b               # if a negative one is detected in a register, the value will
 152 024b               # be known to not be read in correctly
 153 024b               
 154 024b               board_dim:
 155 024b 00      	        .word       -1
     024c FFFFFFFF
 156 0250               
 157 0250               generations:
 158 0250 FFFFFFFF	        .word       -1
 159 0254               
 160 0254               A_cells:
 161 0254 FFFFFFFF	        .word       -1
 162 0258               
 163 0258               B_cells:
 164 0258 FFFFFFFF	        .word       -1
 165 025c               
 166 025c               a_next:
 167 025c 00000260	        .word       a_coordinates
 168 0260               
 169 0260               a_coordinates:                                          
 170 0260 00000000	        .space      7200                            #space for 300 x's
          00000000
          00000000
          00000000
          00000000
          00000000
 171 1e80                       .align      2
 172 1e80               
 173 1e80               b_next:
 174 1e80 00001E84	        .word       b_coordinates
 175 1e84               
 176 1e84               b_coordinates:
 177 1e84 00000000	        .space      7200                            #space for 300 y's
          00000000
          00000000
          00000000
          00000000
          00000000
 178 3aa4                       .align      2
 179 3aa4               
 180 3aa4                       #   === 32 byte structure ===   #
 181 3aa4               
 182 3aa4               param_block:
 183 3aa4 0000024C	        .word       board_dim                       #0 offset
 184 3aa8 00000250	        .word       generations                     #4 offset
 185 3aac 00000254	        .word       A_cells                         #8 offset
 186 3ab0 00000258	        .word       B_cells                         #12 offset
 187 3ab4 0000025C	        .word       a_next                          #16 offset
 188 3ab8 00001E80	        .word       b_next                          #20 offset
 189 3abc 00000260	        .word       a_coordinates                   #24 offset
 190 3ac0 00001E84	        .word       b_coordinates                   #28 offset
 191 3ac4               
 192 3ac4               board_array:
 193 3ac4 00000000	        .space      900                             #30x30 char array
          00000000
          00000000
          00000000
          00000000
          00000000
 194 3e48                       
 195 3e48               
 196 3e48               ###########################################
 197 3e48               # ======================================= #
 198 3e48               # ||        MAIN CODE BLOCK            || #
 199 3e48               # ======================================= #
 200 3e48               ###########################################
 201 0000                       .text
 202 0000                       .align      2
 203 0000                       .globl      main
 204 0000                       .globl      get_integer
 205 0000                       .globl      get_A_cells
 206 0000                       .globl      get_B_cells
 207 0000               
 208 0000               main:       
 209 0000 23BDFFD0	        addi    $sp, $sp, -FRAMESIZE_48
 210 0004 AFBF002C	        sw      $ra, -4+FRAMESIZE_48($sp)
 211 0008                       
 212 0008 34020004	        li      $v0, PRINT_STRING                   #print banner
 213 000c 3C040000	        la      $a0, banner
     0010 34840000
 214 0014 0000000C	        syscall
 215 0018                       
 216 0018                       # ---------------------------- #
 217 0018                       #       Get user input         #
 218 0018                       # ---------------------------- #
 219 0018               
 220 0018                       # print and get board dimensions #
 221 0018               
 222 0018 34020004	        li      $v0, PRINT_STRING                    
 223 001c 3C040000	        la      $a0, enter_board_size
     0020 34840000
 224 0024 0000000C	        syscall
 225 0028                       
 226 0028 3C040000	        la      $a0, board_dim 
     002c 34840000
 227 0030 34050004	        li      $a1, 4
 228 0034 3406001E	        li      $a2, 30
 229 0038 3C070000	        la      $a3, illegal_size
     003c 34E70000
 230 0040 0C000000	        jal     get_integer
 231 0044                       
 232 0044                       # print and get generations #
 233 0044               
 234 0044 34020004	        li      $v0, PRINT_STRING                    
 235 0048 3C040000	        la      $a0, enter_generations
     004c 34840000
 236 0050 0000000C	        syscall
 237 0054                       
 238 0054 3C040000	        la      $a0, generations
     0058 34840000
 239 005c 34050000	        li      $a1, 0
 240 0060 34060014	        li      $a2, 20
 241 0064 3C070000	        la      $a3, illegal_gens
     0068 34E70000
 242 006c 0C000000	        jal     get_integer
 243 0070               
 244 0070                       # print and get A colony size #
 245 0070               
 246 0070 34020004	        li      $v0, PRINT_STRING                    
 247 0074 3C040000	        la      $a0, live_cells_A
     0078 34840000
 248 007c 0000000C	        syscall
 249 0080                       
 250 0080 3C040000	        la      $a0, A_cells
     0084 34840000
 251 0088 34050000	        li      $a1, 0
 252 008c 3C060000	        la      $a2, board_dim
     0090 34C60000
 253 0094 8CC60000	        lw      $a2, 0($a2)
 254 0098 00C60018	        mul     $a2, $a2, $a2                       #dim^2
     009c 00003012
 255 00a0 3C070000	        la      $a3, illegal_cells
     00a4 34E70000
 256 00a8 0C000000	        jal     get_integer
 257 00ac               
 258 00ac                       # print and get A colony locations #
 259 00ac               
 260 00ac 34020004	        li      $v0, PRINT_STRING                    
 261 00b0 3C040000	        la      $a0, enter_locations
     00b4 34840000
 262 00b8 0000000C	        syscall
 263 00bc                       
 264 00bc 3C040000	        la      $a0, param_block
     00c0 34840000
 265 00c4 3C050000	        la      $a1, illegal_point
     00c8 34A50000
 266 00cc 0C000000	        jal     get_A_cells
 267 00d0               
 268 00d0                       # print and get B colony size #
 269 00d0               
 270 00d0 34020004	        li      $v0, PRINT_STRING                    
 271 00d4 3C040000	        la      $a0, live_cells_B
     00d8 34840000
 272 00dc 0000000C	        syscall
 273 00e0                       
 274 00e0 3C040000	        la      $a0, B_cells
     00e4 34840000
 275 00e8 34050000	        li      $a1, 0
 276 00ec 3C060000	        la      $a2, board_dim
     00f0 34C60000
 277 00f4 8CC60000	        lw      $a2, 0($a2)
 278 00f8 00C60018	        mul     $a2, $a2, $a2                       #dim^2
     00fc 00003012
 279 0100 3C070000	        la      $a3, illegal_cells
     0104 34E70000
 280 0108 0C000000	        jal     get_integer
 281 010c                       
 282 010c                       # print and get B colony locations #
 283 010c               
 284 010c 34020004	        li      $v0, PRINT_STRING                    
 285 0110 3C040000	        la      $a0, enter_locations
     0114 34840000
 286 0118 0000000C	        syscall
 287 011c                       
 288 011c 3C040000	        la      $a0, param_block
     0120 34840000
 289 0124 3C050000	        la      $a1, illegal_point
     0128 34A50000
 290 012c 0C000000	        jal     get_B_cells
 291 0130                       
 292 0130               
 293 0130                       # == test input grabbing == #
 294 0130 3C040000	        la      $a0, param_block
     0134 34840000
 295 0138 0C000083	        jal     debug_params
 296 013c               
 297 013c               end_main:
 298 013c 8FBF002C	        lw      $ra, -4+FRAMESIZE_48($sp)
 299 0140 23BD0030	        addi    $sp, $sp, FRAMESIZE_48
 300 0144 03E00008	        jr      $ra
 301 0148               
 302 0148               
 303 0148               
 304 0148               ###########################################
 305 0148               # ======================================= #
 306 0148               # ||        Helper Code                || #
 307 0148               # ======================================= #
 308 0148               ###########################################
 309 0148               
 310 0148               get_board_dim:
 311 0148 3C080000	        la      $t0, board_dim
     014c 35080000
 312 0150 8D020000	        lw      $v0, 0($t0)
 313 0154 03E00008	        jr      $ra
 314 0158               
 315 0158               get_generations:
 316 0158 3C080000	        la      $t0, generations
     015c 35080000
 317 0160 8D020000	        lw      $v0, 0($t0)
 318 0164 03E00008	        jr      $ra
 319 0168               
 320 0168               get_a:
 321 0168 3C080000	        la      $t0, A_cells
     016c 35080000
 322 0170 8D020000	        lw      $v0, 0($t0)
 323 0174 03E00008	        jr      $ra
 324 0178               
 325 0178               get_b:
 326 0178 3C080000	        la      $t0, B_cells
     017c 35080000
 327 0180 8D020000	        lw      $v0, 0($t0)
 328 0184 03E00008	        jr      $ra
 329 0188               
 330 0188               
 331 0188               # =========================================================
 332 0188               # Name:             print_locations
 333 0188               # =========================================================
 334 0188               # Description:      prints an array of location "structs"
 335 0188               #                   each structure is 8 bytes long where:
 336 0188               #                       - 0 -> x coordinate
 337 0188               #                       - 4 offset -> y coordinate
 338 0188               #
 339 0188               # Parameters:
 340 0188               #       a0 -        the location of array to print
 341 0188               #       a1 -        the size of the array
 342 0188               #
 343 0188               # T Registers:
 344 0188               #       t0 -        loop counter
 345 0188               #     
 346 0188               # =========================================================
 347 0188               
 348 0188               print_locations:
 349 0188 34080000	        li      $t0, 0                              # i == 0
 350 018c 00804821	        move    $t1, $a0                            # pointer
 351 0190               
 352 0190               print_loop:
 353 0190 11050019	        beq     $t0, $a1, print_done                #done if i == n 
 354 0194               
 355 0194 3C040000	        la      $a0, newline
     0198 34840000
 356 019c 34020004	        li      $v0, PRINT_STRING                   #print \n
 357 01a0 0000000C	        syscall
 358 01a4                       
 359 01a4 3C040000	        la      $a0, lp
     01a8 34840000
 360 01ac 34020004	        li      $v0, PRINT_STRING                   #print (
 361 01b0 0000000C	        syscall
 362 01b4                       
 363 01b4 8D240000	        lw      $a0, 0($t1)                         #get a[i].x
 364 01b8 34020001	        li      $v0, PRINT_INT
 365 01bc 0000000C	        syscall                                     #print a[i].x
 366 01c0               
 367 01c0 3C040000	        la      $a0, comma
     01c4 34840000
 368 01c8 34020004	        li      $v0, PRINT_STRING                   #print ,
 369 01cc 0000000C	        syscall
 370 01d0                       
 371 01d0 8D240004	        lw      $a0, 4($t1)                         #get a[i].y
 372 01d4 34020001	        li      $v0, PRINT_INT
 373 01d8 0000000C	        syscall                                     #print a[i].y
 374 01dc                       
 375 01dc 3C040000	        la      $a0, rp
     01e0 34840000
 376 01e4 34020004	        li      $v0, PRINT_STRING                   #print )
 377 01e8 0000000C	        syscall
 378 01ec                       
 379 01ec 21290008	        addi    $t1, $t1, 8                         #update pointer
 380 01f0 21080001	        addi    $t0, $t0, 1                         #i++
 381 01f4 08000064	        j       print_loop
 382 01f8               
 383 01f8               print_done:
 384 01f8 3C040000	        la      $a0, newline
     01fc 34840000
 385 0200 34020004	        li      $v0, PRINT_STRING
 386 0204 0000000C	        syscall
 387 0208                       
 388 0208 03E00008	        jr      $ra
 389 020c               
 390 020c               # =========================================================
 391 020c               # Name:             debug_params
 392 020c               # =========================================================
 393 020c               # Description:      print the inputs in the param block
 394 020c               #
 395 020c               # Parameters:
 396 020c               #       a0 -        the parameter block
 397 020c               # S Registers:
 398 020c               #       s0 -        the saved parameter block
 399 020c               # =========================================================
 400 020c               
 401 020c               debug_params:
 402 020c                       
 403 020c 23BDFFF8	        addi    $sp, $sp, -8
 404 0210 AFBF0004	        sw      $ra, 4($sp)
 405 0214 AFB00000	        sw      $s0, 0($sp)
 406 0218                       
 407 0218 00808021	        move    $s0, $a0                            #save param block
 408 021c               
 409 021c                       # print board dimensions #
 410 021c               
 411 021c 34020004	        li      $v0, PRINT_STRING
 412 0220 3C040000	        la      $a0, d_dim
     0224 34840000
 413 0228 0000000C	        syscall
 414 022c               
 415 022c 0C000052	        jal     get_board_dim                       #get the value of board dim
 416 0230 00402021	        move    $a0, $v0
 417 0234 34020001	        li      $v0, PRINT_INT                      #print board dim
 418 0238 0000000C	        syscall
 419 023c               
 420 023c                       # print generations #
 421 023c               
 422 023c 34020004	        li      $v0, PRINT_STRING
 423 0240 3C040000	        la      $a0, d_gen
     0244 34840000
 424 0248 0000000C	        syscall
 425 024c 0C000056	        jal     get_generations                     #value of generations
 426 0250 00402021	        move    $a0, $v0
 427 0254 34020001	        li      $v0, PRINT_INT                      #print generations
 428 0258 0000000C	        syscall
 429 025c               
 430 025c                       # print colony A size #
 431 025c               
 432 025c 34020004	        li      $v0, PRINT_STRING
 433 0260 3C040000	        la      $a0, d_a_cells
     0264 34840000
 434 0268 0000000C	        syscall
 435 026c 0C00005A	        jal     get_a                               #get size a
 436 0270 00402021	        move    $a0, $v0
 437 0274 34020001	        li      $v0, PRINT_INT                      #print size of a
 438 0278 0000000C	        syscall
 439 027c               
 440 027c                       # print locations #
 441 027c 34020004	        li      $v0, PRINT_STRING
 442 0280 3C040000	        la      $a0, d_a_loc
     0284 34840000
 443 0288 0000000C	        syscall
 444 028c               
 445 028c 3C040000	        la      $a0, a_coordinates
     0290 34840000
 446 0294 0C00005A	        jal     get_a                               #get size a
 447 0298 00402821	        move    $a1, $v0
 448 029c 0C000062	        jal     print_locations
 449 02a0               
 450 02a0               
 451 02a0                       # print colony B size#
 452 02a0               
 453 02a0 34020004	        li      $v0, PRINT_STRING
 454 02a4 3C040000	        la      $a0, d_b_cells
     02a8 34840000
 455 02ac 0000000C	        syscall
 456 02b0 0C00005E	        jal     get_b                               #get size b
 457 02b4 00402021	        move    $a0, $v0
 458 02b8 34020001	        li      $v0, PRINT_INT                      #print it
 459 02bc 0000000C	        syscall
 460 02c0               
 461 02c0                       # print locations#
 462 02c0 34020004	        li      $v0, PRINT_STRING
 463 02c4 3C040000	        la      $a0, d_b_loc
     02c8 34840000
 464 02cc 0000000C	        syscall
 465 02d0               
 466 02d0 3C040000	        la      $a0, b_coordinates                  #get addr of arr
     02d4 34840000
 467 02d8 0C00005E	        jal     get_b                               #get size b
 468 02dc 00402821	        move    $a1, $v0
 469 02e0 0C000062	        jal     print_locations
 470 02e4               
 471 02e4 34020004	        li      $v0, PRINT_STRING
 472 02e8 3C040000	        la      $a0, newline
     02ec 34840000
 473 02f0 0000000C	        syscall
 474 02f4                       
 475 02f4 8FBF0004	        lw      $ra, 4($sp)
 476 02f8 8FB00000	        lw      $s0, 0($sp)
 477 02fc 23BD0008	        addi    $sp, $sp, 8
 478 0300 03E00008	        jr      $ra
 479 0304               


A                    00000247 R  data 
A_ARRAY_OFFSET     = 00000018   
A_OFFSET           = 00000008   
A_cells              00000254 R  data 
B                    00000249 R  data 
B_ARRAY_OFFSET     = 0000001C   
B_OFFSET           = 0000000C   
B_cells              00000258 R  data 
DIM_OFFSET         = 00000000   
FRAMESIZE_24       = 00000018   
FRAMESIZE_40       = 00000028   
FRAMESIZE_48       = 00000030   
FRAMESIZE_8        = 00000008   
GEN_OFFSET         = 00000004   
NEXT_A_OFFSET      = 00000010   
NEXT_B_OFFSET      = 00000014   
PRINT_INT          = 00000001   
PRINT_STRING       = 00000004   
READ_INT           = 00000005   
READ_STRING        = 00000008   
a_coordinates        00000260 R  data 
a_next               0000025C R  data 
b_coordinates        00001E84 R  data 
b_next               00001E80 R  data 
banner               000000AD R  data 
bar                  00000245 R  data 
board_array          00003AC4 R  data 
board_dim            0000024C R  data 
comma                0000023C R  data 
d_a_cells            000001F0 R  data 
d_a_loc              00000216 R  data 
d_b_cells            00000203 R  data 
d_b_loc              00000228 R  data 
d_dim                000001CB R  data 
d_gen                000001E0 R  data 
debug_params         0000020C R  text 
end_main             0000013C R  text 
enter_board_size     00000000 R  data 
enter_generations    00000014 R  data 
enter_locations      00000090 R  data 
gen_banner_end       00000108 R  data 
gen_banner_start     000000F4 R  data 
generations          00000250 R  data 
get_A_cells          ******** XG
get_B_cells          ******** XG
get_a                00000168 R  text 
get_b                00000178 R  text 
get_board_dim        00000148 R  text 
get_generations      00000158 R  text 
get_integer          ******** XG
hyphen               00000243 R  data 
illegal_cells        00000175 R  data 
illegal_gens         00000140 R  data 
illegal_point        000001A9 R  data 
illegal_size         00000116 R  data 
live_cells_A         0000003A R  data 
live_cells_B         00000065 R  data 
lp                   0000023A R  data 
main                 00000000 RG text 
newline              00000112 R  data 
param_block          00003AA4 R  data 
plus                 00000241 R  data 
print_done           000001F8 R  text 
print_locations      00000188 R  text 
print_loop           00000190 R  text 
rp                   0000023F R  data 
space                00000114 R  data 
