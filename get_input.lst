   1 0000               #----------------------------------------------------------
   2 0000               # File: $Id$
   3 0000               # Author: Ryan Cervantes (rxc3202@rit.edu)
   4 0000               # Description:
   5 0000               #               This file contains the subroutines that gets the input from the
   6 0000               #               user in order to run the program
   7 0000               #----------------------------------------------------------
   8 0000               
   9 0000               # ===================
  10 0000               # || syscall codes ||
  11 0000               # ===================
  12 0000               
  13 0000               PRINT_INT =	1
  14 0000               PRINT_STRING = 	4
  15 0000               READ_INT = 	5
  16 0000               READ_STRING =	8
  17 0000               
  18 0000               # ===================
  19 0000               
  20 0000               # ==========================
  21 0000               # || param block constants||
  22 0000               # ==========================
  23 0000               
  24 0000               CELL_FRAMESIZE = 24
  25 0000               BOARD_DIM = 0
  26 0000               GENS = 4
  27 0000               A_CELLS = 8
  28 0000               B_CELLS = 12
  29 0000               NEXT_A = 16
  30 0000               NEXT_B  = 20
  31 0000               
  32 0000                       .text
  33 0000                       .align      2
  34 0000                       .globl      get_integer
  35 0000                       .globl      get_A_cells
  36 0000                       .globl      get_B_cells
  37 0000               
  38 0000               # ===================================================================
  39 0000               # Name:             get_integer
  40 0000               # ===================================================================
  41 0000               # Description:      This function loads the user input for
  42 0000               #                   the single integer parameters
  43 0000               # Parameters:                         
  44 0000               #       a0 -        the location where the input will be stored
  45 0000               # ===================================================================
  46 0000               get_integer:
  47 0000 23BDFFF8	        addi    $sp, $sp, -8                       
  48 0004 AFBF0004	        sw      $ra, 4($sp)
  49 0008 AFB00000	        sw      $s0, 0($sp)                         #store s register
  50 000c               
  51 000c 00808021	        move    $s0, $a0                            
  52 0010 34020005	        li      $v0, READ_INT                       #read int
  53 0014 0000000C	        syscall        
  54 0018 AE020000	        sw      $v0, 0($s0)                         #store in variable
  55 001c               
  56 001c 8FBF0004	        lw      $ra, 4($sp)
  57 0020 8FB00000	        lw      $s0, 0($sp)                         #restore s register 
  58 0024 23BD0008	        addi    $sp, $sp, 8
  59 0028 03E00008	        jr      $ra
  60 002c               
  61 002c               # ===================================================================
  62 002c               # Name:             get_A_cells:
  63 002c               # ===================================================================
  64 002c               # Description:      This function loads the user input for the
  65 002c               #                   locations of the live cells for colony A
  66 002c               #                   
  67 002c               # Parameters:                         
  68 002c               #       a0 -        the parameter block
  69 002c               # S Registers:
  70 002c               #       s0 -        the loop max (2xcells to place)
  71 002c               #       s1 -        the loop counter
  72 002c               #       s2 -        the location of the x buffer
  73 002c               #       s3 -        the location of the y buffer
  74 002c               #
  75 002c               # T Registers:
  76 002c               #       t0 -        end loop register
  77 002c               #       t1 -        temp for row coordinate
  78 002c               #       t2 -        temp for col coordinate
  79 002c               #
  80 002c               # ===================================================================
  81 002c               
  82 002c               get_A_cells:
  83 002c 23BDFFE8	        addi    $sp, $sp, -CELL_FRAMESIZE
  84 0030 AFBF0014	        sw      $ra, -4+CELL_FRAMESIZE($sp)
  85 0034 AFB00010	        sw      $s0, -8+CELL_FRAMESIZE($sp)       
  86 0038 AFB1000C	        sw      $s1, -12+CELL_FRAMESIZE($sp)                       
  87 003c AFB20008	        sw      $s2, -16+CELL_FRAMESIZE($sp)                       
  88 0040 AFB30004	        sw      $s3, -20+CELL_FRAMESIZE($sp)
  89 0044                       
  90 0044 8C900008	        lw      $s0, A_CELLS($a0)                   #load addr of cell cnt
  91 0048 8E100000	        lw      $s0, 0($s0)                         #load int inside addr 
  92 004c                   
  93 004c 8C920010	        lw      $s2, NEXT_A($a0)                    #load addr of loc buf
  94 0050 8E520000	        lw      $s2, 0($s2)                         #load addr of next el.
  95 0054                       
  96 0054 00008821	        move    $s1, $zero                          #i = 0
  97 0058                       
  98 0058               loc_loop_A:
  99 0058 0230402A	        slt     $t0, $s1, $s0                       #if(i < max)
 100 005c 1100000B	        beq     $t0, $zero, A_cells_end             #goto end
 101 0060                       
 102 0060                       # get row coordinate # 
 103 0060               
 104 0060 34020005	        li      $v0, READ_INT
 105 0064 0000000C	        syscall
 106 0068 01201021	        move    $v0, $t1
 107 006c               
 108 006c                       # get col coordinate # 
 109 006c               
 110 006c 34020005	        li      $v0, READ_INT
 111 0070 0000000C	        syscall
 112 0074 01401021	        move    $v0, $t2
 113 0078               
 114 0078                       # place into array #                        # 2 values placed in
 115 0078               
 116 0078 AE490000	        sw      $t1, 0($s2)                         # 0($s2) = x value
 117 007c AE4A0004	        sw      $t2, 4($s2)                         # 4($s2) = y value
 118 0080 22520008	        addi    $s2, $s2, 8                         # increment pointer
 119 0084               
 120 0084                       # increment loop counter #
 121 0084               
 122 0084 22310001	        addi    $s1, $s1, 1
 123 0088 08000016	        j       loc_loop_A
 124 008c               
 125 008c               A_cells_end:
 126 008c               
 127 008c 8FBF0014	        lw      $ra, -4+CELL_FRAMESIZE($sp)
 128 0090 8FB00010	        lw      $s0, -8+CELL_FRAMESIZE($sp)       
 129 0094 8FB1000C	        lw      $s1, -12+CELL_FRAMESIZE($sp)                       
 130 0098 8FB20008	        lw      $s2, -16+CELL_FRAMESIZE($sp)                       
 131 009c 8FB30004	        lw      $s3, -20+CELL_FRAMESIZE($sp)
 132 00a0 23BD0018	        addi    $sp, $sp, CELL_FRAMESIZE
 133 00a4                       
 134 00a4 03E00008	        jr      $ra
 135 00a8                       
 136 00a8               # ===================================================================
 137 00a8               # Name:             get_B_cells:
 138 00a8               # ===================================================================
 139 00a8               # Description:      This function loads the user input for the
 140 00a8               #                   locations of the live cells for colony B
 141 00a8               #                   
 142 00a8               # Parameters:                         
 143 00a8               #       a0 -        the parameter block
 144 00a8               # S Registers:
 145 00a8               #       s0 -        the loop max (2xcells to place)
 146 00a8               #       s1 -        the loop counter
 147 00a8               #       s2 -        the location of the x buffer
 148 00a8               #       s3 -        the location of the y buffer
 149 00a8               #
 150 00a8               # T Registers:
 151 00a8               #       t0 -        end loop register
 152 00a8               #
 153 00a8               # ===================================================================
 154 00a8               
 155 00a8               get_B_cells:
 156 00a8 23BDFFE8	        addi    $sp, $sp, -CELL_FRAMESIZE
 157 00ac AFBF0014	        sw      $ra, -4+CELL_FRAMESIZE($sp)
 158 00b0 AFB00010	        sw      $s0, -8+CELL_FRAMESIZE($sp)       
 159 00b4 AFB1000C	        sw      $s1, -12+CELL_FRAMESIZE($sp)                       
 160 00b8 AFB20008	        sw      $s2, -16+CELL_FRAMESIZE($sp)                       
 161 00bc AFB30004	        sw      $s3, -20+CELL_FRAMESIZE($sp)
 162 00c0                       
 163 00c0               
 164 00c0               
 165 00c0               loc_loop_B:
 166 00c0 0230402A	        slt     $t0, $s1, $s0
 167 00c4 15000006	        bne     $t0, $zero, B_cells_end
 168 00c8                       
 169 00c8                       # get row coordinate # 
 170 00c8               
 171 00c8 34020005	        li      $v0, READ_INT
 172 00cc 0000000C	        syscall
 173 00d0               
 174 00d0                       # get col coordinate # 
 175 00d0               
 176 00d0 34020005	        li      $v0, READ_INT
 177 00d4 0000000C	        syscall
 178 00d8               
 179 00d8                       # increment loop counter #
 180 00d8               
 181 00d8 22310001	        addi    $s1, $s1, 1
 182 00dc 08000030	        j       loc_loop_B
 183 00e0               
 184 00e0               B_cells_end:
 185 00e0               
 186 00e0 8FBF0014	        lw      $ra, -4+CELL_FRAMESIZE($sp)
 187 00e4 8FB00010	        lw      $s0, -8+CELL_FRAMESIZE($sp)       
 188 00e8 8FB1000C	        lw      $s1, -12+CELL_FRAMESIZE($sp)                       
 189 00ec 8FB20008	        lw      $s2, -16+CELL_FRAMESIZE($sp)                       
 190 00f0 8FB30004	        lw      $s3, -20+CELL_FRAMESIZE($sp)
 191 00f4 23BD0018	        addi    $sp, $sp, CELL_FRAMESIZE
 192 00f8 03E00008	        jr      $ra
 193 00fc               


A_CELLS         = 00000008   
A_cells_end       0000008C R  text 
BOARD_DIM       = 00000000   
B_CELLS         = 0000000C   
B_cells_end       000000E0 R  text 
CELL_FRAMESIZE  = 00000018   
GENS            = 00000004   
NEXT_A          = 00000010   
NEXT_B          = 00000014   
PRINT_INT       = 00000001   
PRINT_STRING    = 00000004   
READ_INT        = 00000005   
READ_STRING     = 00000008   
get_A_cells       0000002C RG text 
get_B_cells       000000A8 RG text 
get_integer       00000000 RG text 
loc_loop_A        00000058 R  text 
loc_loop_B        000000C0 R  text 
